@model IEnumerable<Collection.Models.Toy>

@{
    foreach (var item in Model)
    {
        var colorStyle = item.ForSale ? "card-forsale" : "";
        if(colorStyle == "") 
        {
            colorStyle = item.IsDamaged ? "card-damaged" : "";
        }
        <div class="col-sm-4">
            <article class="card @(@colorStyle)">
                @if ((await AuthorizationService.AuthorizeAsync(User, "modify")).Succeeded)
                {
                    <div class="card-options">
                        <a asp-action="Edit" asp-route-id="@item.ToyID" class="btn edit card-button"><span class="fa fa-edit"></span></a>
                        <a asp-action="Delete" asp-route-id="@item.ToyID" class="btn delete card-button"><span class="fa fa-trash"></span></a>
                    </div>
                }
                <a class="img-card" href="#">

                    @{
                        var name = item.Gallery.FirstOrDefault()?.FileName;
                        var src = !String.IsNullOrEmpty(name) ? $"/img/toys/thumbs/{name}.jpg" : "/img/no_img.jpg";
                        <img src=@src />
                    }
                </a>
                <br />
                <div class="card-content">
                    <header>
                        <h2 class="card-title">
                            @item.Name
                        </h2>
                    </header>
                    <div class="">
                        by @item.Producer.Name
                    </div>
                </div>
            </article>
        </div>
    }
}